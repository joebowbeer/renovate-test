# Source: linkerd2/templates/identity.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.11.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
        linkerd.io/workload-ns: linkerd
      annotations:
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
        linkerd.io/created-by: linkerd/helm stable-2.11.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.11.2
    spec:
      serviceAccountName: linkerd-identity
      nodeSelector:
        kubernetes.io/os: linux
      initContainers:
      - name: linkerd-init
        image: cr.l5d.io/linkerd/proxy-init:v1.5.3
        args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443"
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        volumeMounts:
        - name: linkerd-proxy-init-xtables-lock
          mountPath: /run
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
      containers:
      - name: identity
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=kubernetes.io/tls
        - -enable-pprof=false
        ports:
        - name: grpc
          containerPort: 8080
        - name: admin-http
          containerPort: 9990
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        volumeMounts:
        - name: identity-issuer
          mountPath: /var/run/linkerd/identity/issuer
        - name: trust-roots
          mountPath: /var/run/linkerd/identity/trust-roots/
        livenessProbe:
          httpGet:
            port: 9990
            path: /ping
          initialDelaySeconds: 10
        readinessProbe:
          failureThreshold: 7
          httpGet:
            port: 9990
            path: /ready
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 2103
      - name: linkerd-proxy
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        ports:
        - name: linkerd-proxy
          containerPort: 4143
        - name: linkerd-admin
          containerPort: 4191
        env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        resources:
        volumeMounts:
        - name: linkerd-identity-end-entity
          mountPath: /var/run/linkerd/identity/end-entity
        livenessProbe:
          httpGet:
            port: 4191
            path: /live
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            port: 4191
            path: /ready
          initialDelaySeconds: 2
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - name: trust-roots
        configMap:
          name: linkerd-identity-trust-roots
      - name: linkerd-proxy-init-xtables-lock
        emptyDir: {}
      - name: linkerd-identity-end-entity
        emptyDir:
          medium: Memory
---
# Source: linkerd2/templates/proxy-injector.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.11.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
        linkerd.io/workload-ns: linkerd
      annotations:
        checksum/config: b9b8df496c28b8d19ca68348cf0fd7a95948cd4c7b1e3fb0a9a1483831b82222
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
        config.linkerd.io/opaque-ports: "8443"
        linkerd.io/created-by: linkerd/helm stable-2.11.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.11.2
    spec:
      serviceAccountName: linkerd-proxy-injector
      nodeSelector:
        kubernetes.io/os: linux
      initContainers:
      - name: linkerd-init
        image: cr.l5d.io/linkerd/proxy-init:v1.5.3
        args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "4567,4568"
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        volumeMounts:
        - name: linkerd-proxy-init-xtables-lock
          mountPath: /run
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
      containers:
      - name: linkerd-proxy
        image: cr.l5d.io/linkerd/proxy:stable-2.12.1
        ports:
        - name: linkerd-proxy
          containerPort: 4143
        - name: linkerd-admin
          containerPort: 4191
        env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        resources:
        volumeMounts:
        - name: linkerd-identity-end-entity
          mountPath: /var/run/linkerd/identity/end-entity
        livenessProbe:
          httpGet:
            port: 4191
            path: /live
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            port: 4191
            path: /ready
          initialDelaySeconds: 2
        lifecycle:
          postStart:
            exec:
              command:
              - /usr/lib/linkerd/linkerd-await
              - --timeout=2m
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
      - name: proxy-injector
        image: cr.l5d.io/linkerd/controller:stable-2.12.1
        args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        ports:
        - name: proxy-injector
          containerPort: 8443
        - name: admin-http
          containerPort: 9995
        volumeMounts:
        - name: config
          mountPath: /var/run/linkerd/config
        - name: trust-roots
          mountPath: /var/run/linkerd/identity/trust-roots
        - name: tls
          readOnly: true
          mountPath: /var/run/linkerd/tls
        livenessProbe:
          httpGet:
            port: 9995
            path: /ping
          initialDelaySeconds: 10
        readinessProbe:
          failureThreshold: 7
          httpGet:
            port: 9995
            path: /ready
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 2103
      volumes:
      - name: config
        configMap:
          name: linkerd-config
      - name: trust-roots
        configMap:
          name: linkerd-identity-trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: linkerd-proxy-init-xtables-lock
        emptyDir: {}
      - name: linkerd-identity-end-entity
        emptyDir:
          medium: Memory
---
# Source: linkerd2/templates/heartbeat.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.11.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.11.2
spec:
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/helm stable-2.11.2
        spec:
          restartPolicy: Never
          serviceAccountName: linkerd-heartbeat
          nodeSelector:
            kubernetes.io/os: linux
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.12.1
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 2103
  schedule: "21 00 * * *"
  successfulJobsHistoryLimit: 0
